"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[90570],{49905:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});let a=JSON.parse('{"id":"adapters/EntityAdapter/entries/activity/path_activity","title":"Path Activity","description":"The Path Activity is an activity that moves along a predefined path.","source":"@site/versioned_docs/version-0.6.1/adapters/EntityAdapter/entries/activity/path_activity.mdx","sourceDirName":"adapters/EntityAdapter/entries/activity","slug":"/adapters/EntityAdapter/entries/activity/path_activity","permalink":"/0.6.1/adapters/EntityAdapter/entries/activity/path_activity","draft":false,"unlisted":false,"editUrl":"https://github.com/gabber235/TypeWriter/tree/develop/documentation/versioned_docs/version-0.6.1/adapters/EntityAdapter/entries/activity/path_activity.mdx","tags":[],"version":"0.6.1","lastUpdatedBy":"Kerzinator_24","lastUpdatedAt":1735908125000,"frontMatter":{},"sidebar":"adapters","previous":{"title":"Look Close Activity","permalink":"/0.6.1/adapters/EntityAdapter/entries/activity/look_close_activity"},"next":{"title":"Patrol Activity","permalink":"/0.6.1/adapters/EntityAdapter/entries/activity/patrol_activity"}}');var r=i(74848),n=i(28453),d=i(29214);i(40497),i(96867);let s={},o="Path Activity",l={},c=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function h(t){let e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,n.R)(),...t.components};return d||y("fields",!1),d.EntryField||y("fields.EntryField",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"path-activity",children:"Path Activity"})}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"Path Activity"})," is an activity that moves along a predefined path.\nThe entity will move to each location in the set in order.\nOnce the entity reaches the last location, it will do the idle activity."]}),"\n",(0,r.jsx)(e.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,r.jsx)(e.p,{children:"This could be used to have a tour guide that moves along the post-important paths."}),"\n",(0,r.jsx)(e.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(d.EntryField,{name:"Road Network",required:!0}),"\n",(0,r.jsx)(d.EntryField,{name:"Nodes",required:!0,multiple:!0}),"\n",(0,r.jsx)(d.EntryField,{name:"Idle Activity",required:!0,children:(0,r.jsx)(e.p,{children:"The activity that will be used when the entity is at the final location."})})]})}function p(t={}){let{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(h,{...t})}):h(t)}function y(t,e){throw Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);