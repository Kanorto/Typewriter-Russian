"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[92317],{52938:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>c,frontMatter:()=>d,metadata:()=>s,toc:()=>p});let s=JSON.parse('{"id":"adapters/BasicAdapter/entries/audience/closest_group_member_path_stream","title":"Closest Group Member Path Stream","description":"The Closest Group Member Path Stream entry is a path stream that shows the path to the closest group member.","source":"@site/versioned_docs/version-0.6.1/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream.mdx","sourceDirName":"adapters/BasicAdapter/entries/audience","slug":"/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream","permalink":"/0.6.1/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream","draft":false,"unlisted":false,"editUrl":"https://github.com/gabber235/TypeWriter/tree/develop/documentation/versioned_docs/version-0.6.1/adapters/BasicAdapter/entries/audience/closest_group_member_path_stream.mdx","tags":[],"version":"0.6.1","lastUpdatedBy":"Marten Mrfc","lastUpdatedAt":1740082057000,"frontMatter":{},"sidebar":"adapters","previous":{"title":"Cinematic Audience","permalink":"/0.6.1/adapters/BasicAdapter/entries/audience/cinematic_audience"},"next":{"title":"Criteria Audience","permalink":"/0.6.1/adapters/BasicAdapter/entries/audience/criteria_audience"}}');var a=r(74848),i=r(28453),o=r(88894);r(57185),r(28618);let d={},n="Closest Group Member Path Stream",l={},p=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function h(e){let t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return o||m("fields",!1),o.EntryField||m("fields.EntryField",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"closest-group-member-path-stream",children:"Closest Group Member Path Stream"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"Closest Group Member Path Stream"})," entry is a path stream that shows the path to the closest group member.\nThe 'Closest Group Member' is determined by the group member that is closest to the player geographically,\n",(0,a.jsx)(t.strong,{children:"Not based on the path distance."})]}),"\n",(0,a.jsx)(t.p,{children:"When the group is not set, the path stream will not display anything.\nPlayers must be in the same world for the path stream to consider them."}),"\n",(0,a.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,a.jsx)(t.p,{children:"This could be used to show a path to the closest group member in a group of players.\nWhen a player is lost, they can follow the path to the closest group member."}),"\n",(0,a.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,a.jsx)(o.EntryField,{name:"Road",required:!0}),"\n",(0,a.jsx)(o.EntryField,{name:"Group",required:!0})]})}function c(e={}){let{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}function m(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);