"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[39255],{85554:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>n,metadata:()=>d,toc:()=>u});const d=JSON.parse('{"id":"adapters/BasicAdapter/entries/quest/tracked_objective_audience","title":"Tracked Objective Audience","description":"The Tracked Objective Audience entry filters an audience based on if they have a tracked objective.","source":"@site/docs/adapters/BasicAdapter/entries/quest/tracked_objective_audience.mdx","sourceDirName":"adapters/BasicAdapter/entries/quest","slug":"/adapters/BasicAdapter/entries/quest/tracked_objective_audience","permalink":"/beta/adapters/BasicAdapter/entries/quest/tracked_objective_audience","draft":false,"unlisted":false,"editUrl":"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/BasicAdapter/entries/quest/tracked_objective_audience.mdx","tags":[],"version":"current","lastUpdatedBy":"Gabber235","lastUpdatedAt":1744008442000,"frontMatter":{"author":{"username":"ghost","commit":"not-found"}},"sidebar":"adapters","previous":{"title":"Quest Status Update Event","permalink":"/beta/adapters/BasicAdapter/entries/quest/quest_status_update_event"},"next":{"title":"Tracked Quest Audience","permalink":"/beta/adapters/BasicAdapter/entries/quest/tracked_quest_audience"}}');var s=a(74848),i=a(28453),r=a(21678);a(40703),a(28774);const n={author:{username:"ghost",commit:"not-found"}},c="Tracked Objective Audience",o={},u=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,i.R)(),...e.components};return r||p("fields",!1),r.EntryField||p("fields.EntryField",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"tracked-objective-audience",children:"Tracked Objective Audience"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Tracked Objective Audience"})," entry filters an audience based on if they have a tracked objective.\nIt looks if the player has an objective showing from the quest that is being tracked."]}),"\n",(0,s.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,s.jsx)(t.p,{children:"This could be used to show a boss bar or sidebar based on if a player has an objective showing."}),"\n",(0,s.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsx)(r.EntryField,{name:"Children",required:!0,multiple:!0}),"\n",(0,s.jsx)(r.EntryField,{name:"Inverted",required:!0})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}function p(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);