"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[59690],{99706:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"adapters/BasicAdapter/entries/event/on_interact_with_block","title":"Interact Block Event","description":"The Interact Block Event is triggered when a player interacts with a block by right-clicking it.","source":"@site/docs/adapters/BasicAdapter/entries/event/on_interact_with_block.mdx","sourceDirName":"adapters/BasicAdapter/entries/event","slug":"/adapters/BasicAdapter/entries/event/on_interact_with_block","permalink":"/beta/adapters/BasicAdapter/entries/event/on_interact_with_block","draft":false,"unlisted":false,"editUrl":"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/adapters/BasicAdapter/entries/event/on_interact_with_block.mdx","tags":[],"version":"current","lastUpdatedBy":"Marten Mrfc","lastUpdatedAt":1744826394000,"frontMatter":{},"sidebar":"adapters","previous":{"title":"Fish Event","permalink":"/beta/adapters/BasicAdapter/entries/event/on_fish"},"next":{"title":"Pickup Item Event","permalink":"/beta/adapters/BasicAdapter/entries/event/on_item_pickup"}}');var r=n(74848),a=n(28453),c=n(21678);n(40703),n(28774);const s={},d="Interact Block Event",l={},o=[{value:"How could this be used?",id:"how-could-this-be-used",level:2},{value:"Fields",id:"fields",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,a.R)(),...e.components};return c||u("fields",!1),c.EntryField||u("fields.EntryField",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"interact-block-event",children:"Interact Block Event"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"Interact Block Event"})," is triggered when a player interacts with a block by right-clicking it."]}),"\n",(0,r.jsx)(t.h2,{id:"how-could-this-be-used",children:"How could this be used?"}),"\n",(0,r.jsx)(t.p,{children:"This could be used to create special interactions with blocks, such as opening a secret door when you right-click a certain block, or a block that requires a key to open."}),"\n",(0,r.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsx)(c.EntryField,{name:"Triggers",required:!0,multiple:!0}),"\n",(0,r.jsx)(c.EntryField,{name:"Block",required:!0,children:(0,r.jsx)(t.p,{children:"The block that was interacted with."})}),"\n",(0,r.jsx)(c.EntryField,{name:"Location",optional:!0,children:(0,r.jsx)(t.p,{children:"The location of the block that was interacted with."})}),"\n",(0,r.jsx)(c.EntryField,{name:"Item In Hand",required:!0,children:(0,r.jsx)(t.p,{children:"The item the player must be holding when the block is interacted with."})}),"\n",(0,r.jsx)(c.EntryField,{name:"Cancel",required:!0,children:(0,r.jsx)(t.p,{children:"Cancel the event when triggered.\nIt will only cancel the event if all the criteria are met.\nIf set to false, it will not modify the event."})}),"\n",(0,r.jsx)(c.EntryField,{name:"Interaction Type",required:!0,children:(0,r.jsx)(t.p,{children:"The type of interaction that should trigger the event."})}),"\n",(0,r.jsx)(c.EntryField,{name:"Shift Type",required:!0,children:(0,r.jsx)(t.p,{children:"The type of shift that should trigger the event."})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}function u(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);