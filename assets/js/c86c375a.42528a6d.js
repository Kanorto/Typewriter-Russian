"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[85467],{74382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>d});let r=JSON.parse('{"id":"docs/concepts/index","title":"Concepts","description":"This section is currently being written! If you want to help us out with writing this section join the Discord and create a question.","source":"@site/docs/docs/04-concepts/index.mdx","sourceDirName":"docs/04-concepts","slug":"/docs/concepts/","permalink":"/beta/docs/concepts/","draft":false,"unlisted":false,"editUrl":"https://github.com/gabber235/TypeWriter/tree/develop/documentation/docs/docs/04-concepts/index.mdx","tags":[],"version":"current","lastUpdatedBy":"dependabot[bot]","lastUpdatedAt":1743394555000,"frontMatter":{"author":{"username":"dependabot[bot]","commit":"287ae07"}},"sidebar":"tutorialSidebar","previous":{"title":"Custom Commands","permalink":"/beta/docs/creating-stories/advanced-interactions/custom-commands"},"next":{"title":"Manifest Entries","permalink":"/beta/docs/concepts/Manifest/"}}');var i=n(74848),s=n(28453),o=n(87287);let a={author:{username:"dependabot[bot]",commit:"287ae07"}},c="Concepts",l={},d=[{value:"Pages already written:",id:"pages-already-written",level:2}];function u(e){let t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"concepts",children:"Concepts"})}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["This section is currently being written! If you want to help us out with writing this section join the ",(0,i.jsx)(t.a,{href:"https://discord.gg/HtbKyuDDBw",children:"Discord"})," and create a question."]})}),"\n",(0,i.jsx)(t.p,{children:"Typewriter uses several core concepts that work together to create interactive experiences in Minecraft. This section introduces these foundational ideas to help you understand how Typewriter works."}),"\n",(0,i.jsx)(t.h2,{id:"pages-already-written",children:"Pages already written:"}),"\n",(0,i.jsx)(o.A,{})]})}function h(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},87287:(e,t,n)=>{n.d(t,{A:()=>w});var r=n(74848);n(96540);var i=n(34164),s=n(37960),o=n(28618),a=n(83477),c=n(11410),l=n(15418),d=n(61917);let u={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function h(e){let{href:t,children:n}=e;return(0,r.jsx)(o.A,{href:t,className:(0,i.A)("card padding--lg",u.cardContainer),children:n})}function p(e){let{href:t,icon:n,title:s,description:o}=e;return(0,r.jsxs)(h,{href:t,children:[(0,r.jsxs)(d.A,{as:"h2",className:(0,i.A)("text--truncate",u.cardTitle),title:s,children:[n," ",s]}),o&&(0,r.jsx)("p",{className:(0,i.A)("text--truncate",u.cardDescription),title:o,children:o})]})}function m(e){let{item:t}=e,n=(0,s.Nr)(t),i=function(){let{selectMessage:e}=(0,a.W)();return t=>e(t,(0,l.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return n?(0,r.jsx)(p,{href:n,icon:"\uD83D\uDDC3\uFE0F",title:t.label,description:t.description??i(t.items.length)}):null}function f(e){let{item:t}=e,n=(0,c.A)(t.href)?"\u{1F4C4}\uFE0F":"\u{1F517}",i=(0,s.cC)(t.docId??void 0);return(0,r.jsx)(p,{href:t.href,icon:n,title:t.label,description:t.description??i?.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return(0,r.jsx)(f,{item:t});case"category":return(0,r.jsx)(m,{item:t});default:throw Error(`unknown item type ${JSON.stringify(t)}`)}}function x(e){let{className:t}=e,n=(0,s.$S)();return(0,r.jsx)(w,{items:n.items,className:t})}function w(e){let{items:t,className:n}=e;if(!t)return(0,r.jsx)(x,{...e});let o=(0,s.d1)(t);return(0,r.jsx)("section",{className:(0,i.A)("row",n),children:o.map((e,t)=>(0,r.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,r.jsx)(g,{item:e})},t))})}},83477:(e,t,n)=>{n.d(t,{W:()=>c});var r=n(96540),i=n(90062);let s=["zero","one","two","few","many","other"];function o(e){return s.filter(t=>e.includes(t))}let a={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function c(){let e=function(){let{i18n:{currentLocale:e}}=(0,i.A)();return(0,r.useMemo)(()=>{try{return function(e){let t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".
Docusaurus will fallback to the default (English) implementation.
Error: ${t.message}
`),a}},[e])}();return{selectMessage:(t,n)=>(function(e,t,n){let r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);let i=n.select(t);return r[Math.min(n.pluralForms.indexOf(i),r.length-1)]})(n,t,e)}}}}]);