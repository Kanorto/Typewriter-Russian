"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6676],{99192:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>d,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"develop/adapters/index","title":"Adapters","description":"Introduction","source":"@site/versioned_docs/version-0.4.2/develop/02-adapters/index.mdx","sourceDirName":"develop/02-adapters","slug":"/develop/adapters/","permalink":"/0.4.2/develop/adapters/","draft":false,"unlisted":false,"editUrl":"https://github.com/gabber235/TypeWriter/tree/develop/documentation/versioned_docs/version-0.4.2/develop/02-adapters/index.mdx","tags":[],"version":"0.4.2","lastUpdatedBy":"Marten Mrfc","lastUpdatedAt":1744313064000,"frontMatter":{"author":{"username":"ghost","commit":"not-found"}},"sidebar":"develop","previous":{"title":"Development","permalink":"/0.4.2/develop/index"},"next":{"title":"Getting Started","permalink":"/0.4.2/develop/adapters/getting_started"}}');var i=n(74848),r=n(28453);const d={author:{username:"ghost",commit:"not-found"}},s="Adapters",o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Guides",id:"guides",level:2}];function p(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"adapters",children:"Adapters"})}),"\n",(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.p,{children:"TypeWriter is a dynamic platform that supports the development of adapters, which are modular components enhancing the overall functionality. Adapters are self-contained, easily shareable, and integrate smoothly into the TypeWriter system. This guide is tailored to guide you through the process of creating an adapter, suitable for both beginners and experienced developers."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"It is highly recommended to write adapters in Kotlin, as it is the primary language of TypeWriter. Though, it is possible to write adapters in Java, not all features are usable in Java."})}),"\n",(0,i.jsx)(t.h2,{id:"guides",children:"Guides"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/0.4.2/develop/adapters/getting_started",children:"Getting Started"})}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);